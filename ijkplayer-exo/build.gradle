apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'//jcenter 仓库添加



def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    // http://tools.android.com/tech-docs/new-build-system/tips
    //noinspection GroovyAssignabilityCheck
    compileSdkVersion rootProject.ext.compileSdkVersion
    //noinspection GroovyAssignabilityCheck
    buildToolsVersion rootProject.ext.buildToolsVersion

    lintOptions {
        abortOnError false
    }
    defaultConfig {
        minSdkVersion 11
        targetSdkVersion rootProject.ext.targetSdkVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.google.android.exoplayer:exoplayer:r1.5.11'

//    compile project(':ijkplayer-java')
    compile 'tv.danmaku.ijk.media:ijkplayer-java:0.8.4'
    compile 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.4'
    compile 'com.android.support:support-annotations:25.0.1'
//    compile 'com.android.support:appcompat-v7:25.0.1'
}


//jcenter 仓库添加
publish {
    userOrg = keystoreProperties['userOrg']
    groupId = keystoreProperties['groupId']
    artifactId = keystoreProperties['artifactId']
    publishVersion = keystoreProperties['publishVersion']
    desc = keystoreProperties['desc']
    website = keystoreProperties['website']
}

//gradle.startParameter.taskNames.each { task ->
//    def subProjectName = task;
//    if (task.startsWith(':'))
//        subProjectName = task.split(":")[1]
//    if (subProjectName.equals(project.name))
//        apply from: new File(rootProject.projectDir, "tools/gradle-on-demand.gradle");
//}
